openapi: 3.0.1
info:
  title: ETRA API
  description: The ETRA RESTful service using springdoc and OpenAPI 3.
  contact:
    name: Byteworks Bot
    email: airekeola@byteworks.com.ng
  version: '1.0'
servers:
  - url: http://transport.byteworks.com.ng/api
    description: Generated server url
tags:
  - name: location
    description: Location API
  - name: zone
    description: Zone API
paths:
  /users:
    post:
      tags:
        - user-management-controller
      operationId: createUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-sales/create:
    post:
      tags:
        - ticket-sales-controller
      operationId: createAgentTicketBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAgentTicketBatchDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-batches/assign-to-appuser:
    post:
      tags:
        - ticket-batch-controller
      operationId: assignTicketBatchToAppUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketBatchAssignmentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketBatch'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif/{id}/deactivate:
    post:
      tags:
        - tarrif-management-controller
      summary: Deactivate Ticket Type
      description: Can deactivate new tarrif (Ticket Type)
      operationId: deactivateTicketType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif/{id}/activate:
    post:
      tags:
        - tarrif-management-controller
      summary: Activate Ticket Type
      description: Can create activate tarrif (Ticket Type)
      operationId: activateTicketType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif/update:
    post:
      tags:
        - tarrif-management-controller
      summary: Create a new Ticket Type
      description: Can create a new tarrif (Ticket Type)
      operationId: updateTicketType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTicketTypeDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif/create:
    post:
      tags:
        - tarrif-management-controller
      summary: Create a new Ticket Type
      description: Can create a new tarrif (Ticket Type)
      operationId: createTicketType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketTypeDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /request-token:
    post:
      tags:
        - user-controller
      operationId: requestToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-users/change-user-password/{username}:
    post:
      tags:
        - portal-user-controller
      operationId: changePasswordForUser
      parameters:
        - name: newPassword
          in: query
          required: true
          schema:
            type: string
        - name: notificationChannel
          in: query
          required: false
          schema:
            type: string
            enum:
              - PHONE_NUMBER
              - EMAIL
        - name: username
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /payment/validate:
    post:
      tags:
        - payment-controller
      operationId: validateCustomer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerInformationRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /payment/notification:
    post:
      tags:
        - payment-controller
      operationId: processPaymentNotification
      parameters:
        - name: X-PAYMENT-PROVIDER
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /otp/verify:
    post:
      tags:
        - one-time-password-controller
      operationId: verifyOtp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOtpDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomApiResponseString'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /otp/request:
    post:
      tags:
        - one-time-password-controller
      operationId: requestOneTimePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestOtpDto'
        required: true
      responses:
        '200':
          description: Request Email Verification
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CustomApiResponseString'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /me/address:
    post:
      tags:
        - user-controller
      operationId: setAddress
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddressDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /logout:
    post:
      tags:
        - user-controller
      operationId: logoutUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /files/upload:
    post:
      tags:
        - bw-file-controller
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /etra-app/request-token:
    post:
      tags:
        - user-controller
      operationId: requestAppToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAppUserProfilePojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /bills:
    get:
      tags:
        - bill-controller
      summary: Search Bills
      description: A user can search for Bills
      operationId: searchBills
      parameters:
        - name: biller
          in: query
          required: false
          schema:
            type: string
        - name: agentId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: datePaid
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: dueDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: billItems
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: qrCode
          in: query
          required: false
          schema:
            type: string
        - name: reasonForDisapproval
          in: query
          required: false
          schema:
            type: string
        - name: customerEmail
          in: query
          required: false
          schema:
            type: string
        - name: lastReviewer
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: paymentStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - PAID
              - PENDING
              - PARTIAL
        - name: approvalStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - APPROVED
              - PENDING
              - DISAPPROVED
        - name: customerAddress
          in: query
          required: false
          schema:
            type: string
        - name: amount
          in: query
          required: false
          schema:
            type: number
        - name: billType
          in: query
          required: false
          schema:
            type: string
            enum:
              - TICKET_BATCH
        - name: customerName
          in: query
          required: false
          schema:
            type: string
        - name: lastReviewDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: paymentInvoice
          in: query
          required: false
          schema:
            type: string
        - name: billNumber
          in: query
          required: false
          schema:
            type: string
        - name: customerPhoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: customer
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsBillPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    post:
      tags:
        - bill-controller
      summary: Generate Bill
      description: A user can generate Bill
      operationId: generateBill
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BillGenerationDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GenerateBillPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users:
    get:
      tags:
        - app-user-controller
      operationId: searchAppUsers
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: displayName
          in: query
          required: false
          schema:
            type: string
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: portalUser
          in: query
          required: false
          schema:
            type: string
        - name: firstName
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: username
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: agentId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: role
          in: query
          required: false
          schema:
            type: string
            enum:
              - SELLER
              - ENFORCER
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: agentEmail
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: agentName
          in: query
          required: false
          schema:
            type: string
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsAppUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    post:
      tags:
        - app-user-controller
      operationId: createAppUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAppUserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users/vend:
    post:
      tags:
        - app-user-controller
      operationId: vendTicket
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketVendDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAppUserAvailableBatchesPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users/validate:
    post:
      tags:
        - app-user-controller
      operationId: validateTicket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTicketValidationDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TicketIssuancePojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /agents:
    get:
      tags:
        - agent-controller
      summary: search agent
      description: An Organisation can search for Agents
      operationId: searchAgent
      parameters:
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: portalUser
          in: query
          required: false
          schema:
            type: string
        - name: agentId
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: zoneCode
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsAgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    post:
      tags:
        - agent-controller
      summary: register agent
      description: An Organisation can register an Agent
      operationId: registerAgent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentRegistrationDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /users/{id}:
    get:
      tags:
        - user-management-controller
      operationId: getUserDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PortalUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    patch:
      tags:
        - user-management-controller
      operationId: updateUserDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditUserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PortalUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /organizations/{id}/review:
    patch:
      tags:
        - organization-controller
      operationId: reviewOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: review
          in: query
          required: true
          schema:
            type: string
            enum:
              - APPROVED
              - PENDING
              - DISAPPROVED
        - name: reasonForDisapproval
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Organization'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users/{id}:
    get:
      tags:
        - app-user-controller
      operationId: getAppUserDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    patch:
      tags:
        - app-user-controller
      operationId: editAppUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAppUserDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /agents/{id}:
    get:
      tags:
        - agent-controller
      summary: get agent
      description: Get details of an Agent
      operationId: getAgent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    delete:
      tags:
        - agent-controller
      operationId: deactivateAgent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
    patch:
      tags:
        - agent-controller
      operationId: editAgent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAgentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /agents/reactivate/{id}:
    patch:
      tags:
        - agent-controller
      operationId: reactivateAgent
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateAgentDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AgentPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /zones:
    get:
      tags:
        - zone
      summary: search zones
      description: filter zones
      operationId: searchZones
      parameters:
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsZone'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /users/unique-email:
    get:
      tags:
        - user-management-controller
      operationId: isEmailUnique
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseString'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /users/search:
    get:
      tags:
        - user-management-controller
      operationId: searchPortalUsers
      parameters:
        - name: lastName
          in: query
          required: false
          schema:
            type: string
        - name: gender
          in: query
          required: false
          schema:
            type: string
            enum:
              - MALE
              - FEMALE
              - UNSPECIFIED
              - OTHER
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: generatedPassword
          in: query
          required: false
          schema:
            type: string
        - name: displayName
          in: query
          required: false
          schema:
            type: string
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: portalAccountMemberships
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: nationalIdentityNumber
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: preferredName
          in: query
          required: false
          schema:
            type: string
        - name: email
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: setupComplete
          in: query
          required: false
          schema:
            type: boolean
        - name: dateOfBirth
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: emailVerified
          in: query
          required: false
          schema:
            type: boolean
        - name: firstName
          in: query
          required: false
          schema:
            type: string
        - name: otherNames
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: username
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: accountCode
          in: query
          required: false
          schema:
            type: string
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: role
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: accountType
          in: query
          required: false
          schema:
            type: string
            enum:
              - ADMIN
              - ORGANIZATION
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsPortalUserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-validation-logs:
    get:
      tags:
        - ticket-validation-log-controller
      operationId: searchValidationLogs
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: appUser
          in: query
          required: false
          schema:
            type: string
        - name: ticketNumber
          in: query
          required: false
          schema:
            type: string
        - name: validationResult
          in: query
          required: false
          schema:
            type: string
            enum:
              - VALID
              - INVALID
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketIssuance
          in: query
          required: false
          schema:
            type: string
        - name: ticketType
          in: query
          required: false
          schema:
            type: string
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: phoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: vehicleNumber
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: gpsCoordinate
          in: query
          required: false
          schema:
            type: string
        - name: appUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: trackingId
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketValidationLogPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-sales:
    get:
      tags:
        - ticket-sales-controller
      operationId: searchTicketSales
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: agent
          in: query
          required: false
          schema:
            type: string
        - name: ticketBatch
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketType
          in: query
          required: false
          schema:
            type: string
        - name: organizationPaymentInfo
          in: query
          required: false
          schema:
            type: string
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: batchNumber
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: salesToDate
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: salesFromDate
          in: query
          required: false
          schema:
            type: string
        - name: zone
          in: query
          required: false
          schema:
            type: string
        - name: paymentReference
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketSalesPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-sales/{organizationId}/validate-payment:
    get:
      tags:
        - ticket-sales-controller
      operationId: validatePayment
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: paymentReference
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentValidationPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-issuances:
    get:
      tags:
        - ticket-issuance-controller
      operationId: searchTicketIssuances
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: appUser
          in: query
          required: false
          schema:
            type: string
        - name: ticket
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: recipientPhoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: zone
          in: query
          required: false
          schema:
            type: string
        - name: ticketTypeCode
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: vehicleNumber
          in: query
          required: false
          schema:
            type: string
        - name: recipientName
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: appUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketIssuancePojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-issuance-logs:
    get:
      tags:
        - ticket-issuance-log-controller
      operationId: searchTicketIssuanceLogs
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: appUser
          in: query
          required: false
          schema:
            type: string
        - name: ticketNumber
          in: query
          required: false
          schema:
            type: string
        - name: ticket
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketType
          in: query
          required: false
          schema:
            type: string
        - name: ticketTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: recipientPhoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: zone
          in: query
          required: false
          schema:
            type: string
        - name: appUserName
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: zoneId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: recipientName
          in: query
          required: false
          schema:
            type: string
        - name: vehicleNumber
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: appUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: agentId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: agentEmail
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: agentName
          in: query
          required: false
          schema:
            type: string
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultPojoTicketIssuanceLogPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-batches:
    get:
      tags:
        - ticket-batch-controller
      operationId: searchTicketBatch
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketType
          in: query
          required: false
          schema:
            type: string
        - name: ticketTypeId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: numberOfTicketsInBatch
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: batchSoldOut
          in: query
          required: false
          schema:
            type: boolean
        - name: ticketType.name
          in: query
          required: false
          schema:
            type: string
        - name: productionDate
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: ticketBatchRequest
          in: query
          required: false
          schema:
            type: string
        - name: unitAmount
          in: query
          required: false
          schema:
            type: number
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: batchNumber
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: agentId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: organizationName
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: appUserName
          in: query
          required: false
          schema:
            type: string
        - name: agentName
          in: query
          required: false
          schema:
            type: string
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: appUserId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultPojoTicketBatchPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /ticket-batches/organizations/{organizationId}/agents/{agentId}/appuser-unassigned:
    get:
      tags:
        - ticket-batch-controller
      operationId: getBatchesUnassignedToAppUsers
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: agentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketBatchPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif:
    get:
      tags:
        - tarrif-management-controller
      summary: search ticket types
      description: Can search for Tarrifs (Ticket types)
      operationId: search
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: organizationName
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: buyingPricePerUnit
          in: query
          required: false
          schema:
            type: number
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: sellingPricePerUnit
          in: query
          required: false
          schema:
            type: number
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createdBefore
          in: query
          required: false
          schema:
            type: string
        - name: createdAfter
          in: query
          required: false
          schema:
            type: string
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTarrifManagementPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /tarrif/{id}:
    get:
      tags:
        - tarrif-management-controller
      summary: Create a new Ticket Type
      description: Can create a new tarrif (Ticket Type)
      operationId: getTicketType
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TarrifManagementPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-users/unique-user-phone:
    get:
      tags:
        - portal-user-controller
      operationId: uniqueUserPhone
      parameters:
        - name: phoneNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-users/unique-user-email:
    get:
      tags:
        - portal-user-controller
      operationId: uniqueUserEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-users/fetch/by-phone:
    get:
      tags:
        - portal-user-controller
      operationId: getUserDetailsByPhoneNumber
      parameters:
        - name: phoneNumber
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseBasicUserDetails'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-users/fetch/by-email:
    get:
      tags:
        - portal-user-controller
      operationId: getUserDetailsByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseBasicUserDetails'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-accounts:
    get:
      tags:
        - portal-account-controller
      operationId: searchPortalAccounts
      parameters:
        - name: approvalStatus
          in: query
          required: false
          schema:
            type: string
            enum:
              - APPROVED
              - PENDING
              - DISAPPROVED
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: address
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: lgaId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: organizationName
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: portalAccountMembershipCollection
          in: query
          required: false
          schema:
            type: string
        - name: stateId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lgaCode
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum:
              - ADMIN
              - ORGANIZATION
        - name: countryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: accountPhoneNumber
          in: query
          required: false
          schema:
            type: string
        - name: organizationType
          in: query
          required: false
          schema:
            type: string
            enum:
              - LOCAL_GOVERNMENT
              - FEDERAL_GOVERNMENT
              - STATE_GOVERNMENT
              - OTHER
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: accountEmail
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: reasonForDisapproval
          in: query
          required: false
          schema:
            type: string
        - name: organization
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsPortalAccount'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /portal-accounts/{accountCode}/roles:
    get:
      tags:
        - portal-account-controller
      operationId: getRolesForAccount
      parameters:
        - name: accountCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /organizations/{id}:
    get:
      tags:
        - organization-controller
      operationId: viewOrganizationDetails
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OrganizationSummaryWithTariffPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /organizations/unique-organization-name:
    get:
      tags:
        - organization-controller
      operationId: uniqueOrganizationName
      parameters:
        - name: organizationName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /nationalities:
    get:
      tags:
        - nationality-controller
      operationId: searchNationalities
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsNationality'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /me:
    get:
      tags:
        - user-controller
      operationId: userDetails
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /location/states:
    get:
      tags:
        - location
      summary: search states
      description: filter states using name, code parameters
      operationId: searchStates
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: country
          in: query
          required: false
          schema:
            type: string
        - name: code
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: countryId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: countryAlpha2
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsState'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /location/lgas:
    get:
      tags:
        - location
      summary: search LGAs
      description: find LGAs in a state
      operationId: searchLgas
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: stateId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: lgaCode
          in: query
          required: false
          schema:
            type: string
        - name: lgaName
          in: query
          required: false
          schema:
            type: string
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: stateCode
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: state
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsLga'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /location/countries:
    get:
      tags:
        - location
      summary: search countries
      description: filter countries
      operationId: searchCountries
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: states
          in: query
          required: false
          schema:
            type: string
        - name: supportedOnSystem
          in: query
          required: false
          schema:
            type: boolean
        - name: internationalDialingCode
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: alpha2
          in: query
          required: false
          schema:
            type: string
        - name: name
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: alpha3
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsCountry'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /location/areas:
    get:
      tags:
        - location
      summary: search areas
      description: find areas in a LGA
      operationId: searchAreas
      parameters:
        - name: lastUpdatedBy
          in: query
          required: false
          schema:
            type: string
        - name: createdAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: areaCode
          in: query
          required: false
          schema:
            type: string
        - name: createdBy
          in: query
          required: false
          schema:
            type: string
        - name: lastUpdatedAt
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: areaName
          in: query
          required: false
          schema:
            type: string
        - name: lga
          in: query
          required: false
          schema:
            type: string
        - name: lgaCode
          in: query
          required: false
          schema:
            type: string
        - name: dateDeactivated
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: deactivatedBy
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum:
              - ACTIVE
              - INACTIVE
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: orderColumn
          in: query
          required: false
          schema:
            type: string
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsArea'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /files/{id}:
    get:
      tags:
        - bw-file-controller
      operationId: downloadFile
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content: {}
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /etra-app/user-profile:
    get:
      tags:
        - user-controller
      operationId: getAppUserProfile
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponseAppUserProfilePojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /drop-down/{orgId}/zones:
    get:
      tags:
        - drop-down-list-controller
      operationId: getZones
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsZone'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /drop-down/{orgId}/ticket-types:
    get:
      tags:
        - drop-down-list-controller
      operationId: getTicketTypes
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /drop-down/{orgId}/agents:
    get:
      tags:
        - drop-down-list-controller
      operationId: getAgents
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsAgent'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /drop-down/{orgId}/agents/{agentCode}/tickets-config:
    get:
      tags:
        - drop-down-list-controller
      operationId: getAgentTicketsConfig
      parameters:
        - name: orgId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: agentCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketTypeDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /bills/{invoiceNumber}:
    get:
      tags:
        - bill-controller
      summary: Get Bill
      description: Get details of a Bill
      operationId: getBill
      parameters:
        - name: invoiceNumber
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BillPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users/{id}/available-batches:
    get:
      tags:
        - app-user-controller
      operationId: getAvailableBatchesForVending
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: organizationId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserAvailableBatchesPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /app-users/ticket-types:
    get:
      tags:
        - app-user-controller
      operationId: getOrganizationTicketTypesForUser
      parameters:
        - name: organizationId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/QueryResultsTicketType'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /analytics/{accountCode}/org-dashboard:
    get:
      tags:
        - analytics-controller
      operationId: getOrganizationDashboardData
      parameters:
        - name: accountCode
          in: path
          required: true
          schema:
            type: string
        - name: period
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - ApiKey: []
  /analytics/{accountCode}/agent-dashboard:
    get:
      tags:
        - analytics-controller
      operationId: getAgentDashboardData
      parameters:
        - name: accountCode
          in: path
          required: true
          schema:
            type: string
        - name: period
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - ApiKey: []
  /analytics/statistics/landing:
    get:
      tags:
        - analytics-controller
      operationId: landingPageStatistics
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LandingPageStatisticsPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /analytics/statistics/app-user:
    get:
      tags:
        - analytics-controller
      operationId: getAppUserStatistics
      parameters:
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: organizationId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AppUserStatisticsPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /analytics/new/statistics:
    get:
      tags:
        - analytics-controller
      operationId: newStatistics
      parameters:
        - name: period
          in: query
          required: false
          schema:
            type: string
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: organizationId
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardStatisticsPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /analytics/admin-dashboard:
    get:
      tags:
        - analytics-controller
      operationId: getEtraAdminDashboardData
      parameters:
        - name: period
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DashboardPojo'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      deprecated: true
      security:
        - ApiKey: []
  /agents/unique-agent-email/{email}:
    get:
      tags:
        - agent-controller
      operationId: uniqueAgentEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
        - name: orgId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApiResponsePortalUser'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /agents/tickets/{id}:
    get:
      tags:
        - agent-controller
      operationId: getAgentTicketsByOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: orgId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TicketTypeDto'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
  /agents/organization/{id}:
    get:
      tags:
        - agent-controller
      operationId: getAgentsByOrganization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agent'
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                type: object
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: object
        '412':
          description: Precondition Failed
          content:
            '*/*':
              schema:
                type: object
      security:
        - ApiKey: []
components:
  schemas:
    NewUserDto:
      required:
        - accountCode
        - email
        - firstName
        - lastName
        - roles
        - username
      type: object
      properties:
        accountCode:
          type: string
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        country:
          type: integer
          format: int64
        password:
          type: string
        fromSocialProvider:
          type: boolean
        roles:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
        phoneNumber:
          type: string
    ApiResponse:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: object
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        zipCode:
          type: string
        street:
          type: string
        houseNumber:
          type: string
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        locality:
          $ref: '#/components/schemas/Locality'
        lga:
          $ref: '#/components/schemas/Lga'
        state:
          $ref: '#/components/schemas/State'
    Area:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        lga:
          $ref: '#/components/schemas/Lga'
    BwFile:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        data:
          type: array
          items:
            type: string
            format: byte
        externalReferencePath:
          type: string
        contentType:
          type: string
        description:
          type: string
        inUse:
          type: boolean
    Country:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        alpha2:
          type: string
        alpha3:
          type: string
        internationalDialingCode:
          type: string
        supportedOnSystem:
          type: boolean
        states:
          type: array
          items:
            $ref: '#/components/schemas/State'
    GpsCoordinate:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        longitude:
          type: number
        latitude:
          type: number
    Lga:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        state:
          $ref: '#/components/schemas/State'
    Locality:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        area:
          $ref: '#/components/schemas/Area'
    NewAgentTicketBatchDto:
      required:
        - agent
        - organizationId
        - payments
        - ticketTypeBatches
      type: object
      properties:
        agent:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        payments:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/PaymentValidationPojo'
        ticketTypeBatches:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/TicketTypeBatch'
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        type:
          type: string
          enum:
            - LOCAL_GOVERNMENT
            - FEDERAL_GOVERNMENT
            - STATE_GOVERNMENT
            - OTHER
        paymentValidationUrl:
          type: string
        accountBanner:
          $ref: '#/components/schemas/BwFile'
        state:
          $ref: '#/components/schemas/State'
        lga:
          $ref: '#/components/schemas/Lga'
        country:
          $ref: '#/components/schemas/Country'
    PaymentValidationPojo:
      type: object
      properties:
        paymentReference:
          type: string
        amount:
          type: number
        paymentDate:
          type: string
        payerName:
          type: string
        paymentStauts:
          type: string
    PortalAccount:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        type:
          type: string
          enum:
            - ADMIN
            - ORGANIZATION
        code:
          type: string
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        reasonForDisapproval:
          type: string
        accountEmail:
          type: string
        accountPhoneNumber:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        organization:
          $ref: '#/components/schemas/Organization'
        portalAccountMembershipCollection:
          type: array
          items:
            $ref: '#/components/schemas/PortalAccountMembership'
    PortalAccountMemberRole:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        membership:
          $ref: '#/components/schemas/PortalAccountMembership'
        role:
          $ref: '#/components/schemas/PortalAccountTypeRole'
    PortalAccountMembership:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        portalAccount:
          $ref: '#/components/schemas/PortalAccount'
        portalUser:
          $ref: '#/components/schemas/PortalUser'
        portalAccountMemberRoles:
          type: array
          items:
            $ref: '#/components/schemas/PortalAccountMemberRole'
    PortalAccountTypeRole:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        displayName:
          type: string
        accountType:
          type: string
          enum:
            - ADMIN
            - ORGANIZATION
        rolePermissions:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'
        portalAccountMemberRoles:
          type: array
          items:
            $ref: '#/components/schemas/PortalAccountMemberRole'
    PortalUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        firstName:
          type: string
        lastName:
          type: string
        otherNames:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        userId:
          type: string
        generatedPassword:
          type: string
        username:
          type: string
        dateOfBirth:
          type: string
          format: date-time
        displayName:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        setupComplete:
          type: boolean
        emailVerified:
          type: boolean
        preferredName:
          type: string
        nationalIdentityNumber:
          type: string
        portalAccountMemberships:
          type: array
          items:
            $ref: '#/components/schemas/PortalAccountMembership'
    RolePermission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
          enum:
            - CREATE_ORGANIZATION
            - CREATE_USER
            - REVIEW_SCHEME
            - CREATE_AGENT
        portalAccountTypeRole:
          $ref: '#/components/schemas/PortalAccountTypeRole'
    State:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        country:
          $ref: '#/components/schemas/Country'
    TicketType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        buyingPricePerUnit:
          type: number
        sellingPricePerUnit:
          type: number
        organization:
          $ref: '#/components/schemas/Organization'
    TicketTypeBatch:
      type: object
      properties:
        batchNumber:
          type: integer
          format: int64
        amount:
          type: number
        ticketType:
          $ref: '#/components/schemas/TicketType'
    NewTicketBatchAssignmentDto:
      required:
        - agentId
        - appUserId
        - organizationId
        - ticketBatchIds
      type: object
      properties:
        appUserId:
          type: integer
          format: int64
        agentId:
          type: integer
          format: int64
        organizationId:
          type: integer
          format: int64
        ticketBatchIds:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            type: integer
            format: int64
    Agency:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
    Agent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        code:
          type: string
        name:
          type: string
        portalUser:
          $ref: '#/components/schemas/PortalUser'
    Bill:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        amount:
          type: number
        billNumber:
          type: string
        datePaid:
          type: string
          format: date-time
        customerName:
          type: string
        customerEmail:
          type: string
        customerPhoneNumber:
          type: string
        paymentStatus:
          type: string
          enum:
            - PAID
            - PENDING
            - PARTIAL
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        customerAddress:
          type: string
        billType:
          type: string
          enum:
            - TICKET_BATCH
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        reasonForDisapproval:
          type: string
        lastReviewDate:
          type: string
          format: date-time
        qrCode:
          $ref: '#/components/schemas/BwFile'
        paymentInvoice:
          $ref: '#/components/schemas/PaymentInvoice'
        customer:
          $ref: '#/components/schemas/Customer'
        lastReviewer:
          $ref: '#/components/schemas/PortalUser'
        biller:
          $ref: '#/components/schemas/PortalAccount'
        billItems:
          type: array
          items:
            $ref: '#/components/schemas/BillItem'
    BillItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        amount:
          type: number
        unitAmount:
          type: number
        discount:
          type: number
        quantity:
          type: integer
          format: int32
        description:
          type: string
        revenueItem:
          $ref: '#/components/schemas/RevenueItem'
        bill:
          $ref: '#/components/schemas/Bill'
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        type:
          type: string
          enum:
            - AGENT
        name:
          type: string
        organization:
          type: boolean
          writeOnly: true
        email:
          type: string
        phoneNumber:
          type: string
        agencyCustomerReference:
          type: string
        customerIdentifier:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        agent:
          $ref: '#/components/schemas/Agent'
    PaymentInvoice:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        amount:
          type: number
        invoiceNumber:
          type: string
        datePaid:
          type: string
          format: date-time
        customerName:
          type: string
        customerEmail:
          type: string
        customerPhoneNumber:
          type: string
        paymentStatus:
          type: string
          enum:
            - PAID
            - PENDING
            - PARTIAL
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        customerAddress:
          type: string
        billType:
          type: string
          enum:
            - TICKET_BATCH
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        reasonForDisapproval:
          type: string
        totalAmountPaid:
          type: number
        qrCode:
          $ref: '#/components/schemas/BwFile'
        bills:
          type: array
          items:
            $ref: '#/components/schemas/Bill'
        paymentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/PaymentTransaction'
    PaymentTransaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        paymentProviderReference:
          type: string
        bwPaymentReference:
          type: string
        amount:
          type: number
        paymentDate:
          type: string
          format: date-time
        payerName:
          type: string
        description:
          type: string
        transactionType:
          type: string
          enum:
            - PAYMENT
            - REVERSAL
        paymentReference:
          type: string
        payerEmail:
          type: string
        payerPhone:
          type: string
        paymentProvider:
          type: string
          enum:
            - PAYSTACK
            - INTERSWITCH
        transactionStatus:
          type: string
          enum:
            - ACTIVE
            - REVERSED
            - DEACTIVATED
        notificationId:
          type: string
        externalReceiptNumber:
          type: string
        paymentMethod:
          type: string
          enum:
            - CARD
            - BOOK_ON_HOLD
            - WEB_PAY
            - POS_TERMINAL
            - DIRECT_DEPOSIT
            - BW_CASH_POS
        endsystemRecordId:
          type: integer
          format: int64
        paymentInvoice:
          $ref: '#/components/schemas/PaymentInvoice'
    RevenueItem:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        amount:
          type: number
        description:
          type: string
        type:
          type: string
          enum:
            - TAX
            - NON_TAX
        minimumAmount:
          type: number
        maximumAmount:
          type: number
        computationType:
          type: string
          enum:
            - FIXED
            - VARIABLE
            - RATE
            - RANGE
        revenueSource:
          $ref: '#/components/schemas/RevenueSource'
    RevenueSource:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        type:
          type: string
          enum:
            - TAX
            - NON_TAX
        defaultItemCode:
          type: string
        arrears:
          type: boolean
        shortName:
          type: string
        agency:
          $ref: '#/components/schemas/Agency'
        organization:
          $ref: '#/components/schemas/Organization'
    TicketBatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        batchNumber:
          type: string
        productionDate:
          type: string
          format: date-time
        batchSoldOut:
          type: boolean
        numberOfTicketsInBatch:
          type: integer
          format: int32
        unitAmount:
          type: number
        ticketType:
          $ref: '#/components/schemas/TicketType'
        ticketBatchRequest:
          $ref: '#/components/schemas/TicketBatchRequest'
    TicketBatchRequest:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        bill:
          $ref: '#/components/schemas/Bill'
    UpdateTicketTypeDto:
      required:
        - buyingPricePerUnit
        - name
        - sellingPricePerUnit
        - ticketTypeId
      type: object
      properties:
        buyingPricePerUnit:
          minimum: 1
          type: number
        sellingPricePerUnit:
          minimum: 1
          type: number
        name:
          type: string
        organizationId:
          type: integer
          format: int64
        ticketTypeId:
          type: integer
          format: int64
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
    NewTicketTypeDto:
      required:
        - buyingPricePerUnit
        - name
        - sellingPricePerUnit
      type: object
      properties:
        buyingPricePerUnit:
          minimum: 1
          type: number
        sellingPricePerUnit:
          minimum: 1
          type: number
        name:
          type: string
        organizationId:
          type: integer
          format: int64
    AccessTokenRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ApiResponseString:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          type: string
    CustomerInformationRequest:
      required:
        - custReference
      type: object
      properties:
        serviceUsername:
          type: string
        servicePassword:
          type: string
        merchantReference:
          type: string
        custReference:
          type: string
        paymentItemCode:
          type: string
        thirdPartyCode:
          type: string
        amount:
          type: number
    VerifyOtpDto:
      required:
        - deliveryMode
        - pin
        - type
      type: object
      properties:
        requesterPhoneNumber:
          type: string
        requesterEmail:
          type: string
        deliveryMode:
          type: string
          enum:
            - SMS
            - EMAIL
            - PHONE_CALL
        type:
          type: string
          enum:
            - USER_REGISTRATION
            - PHONE_NUMBER_UPDATE
            - GENERAL
        pin:
          type: string
    CustomApiResponseString:
      type: object
      properties:
        statusMsg:
          type: string
        statusCode:
          type: string
        responseCode:
          type: string
        code:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: string
        meta:
          type: object
          additionalProperties:
            type: object
        dateGenerated:
          type: string
        status:
          type: string
    RequestOtpDto:
      required:
        - deliveryMode
        - type
      type: object
      properties:
        requesterPhoneNumber:
          type: string
        requesterEmail:
          type: string
        deliveryMode:
          type: string
          enum:
            - SMS
            - EMAIL
            - PHONE_CALL
        type:
          type: string
          enum:
            - USER_REGISTRATION
            - PHONE_NUMBER_UPDATE
            - GENERAL
    AddressDto:
      required:
        - streetAddress
      type: object
      properties:
        zipCode:
          type: string
        streetAddress:
          type: string
        houseNumber:
          type: string
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinateDto'
    GpsCoordinateDto:
      required:
        - latitude
        - longitude
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    AccountMembershipPojo:
      type: object
      properties:
        accountName:
          type: string
        accountCode:
          type: string
        accountId:
          type: integer
          format: int64
        accountType:
          type: string
          enum:
            - ADMIN
            - ORGANIZATION
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
        permissions:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
              - CREATE_ORGANIZATION
              - CREATE_USER
              - REVIEW_SCHEME
              - CREATE_AGENT
        organization:
          $ref: '#/components/schemas/Organization'
        otherData:
          type: object
        agent:
          $ref: '#/components/schemas/Agent'
    AddressPojo:
      type: object
      properties:
        zipCode:
          type: string
        state:
          $ref: '#/components/schemas/NameAndCodeDto'
        country:
          $ref: '#/components/schemas/NameAndCodeDto'
        streetAddress:
          type: string
        houseNumber:
          type: string
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        area:
          $ref: '#/components/schemas/NameAndCodeDto'
        locality:
          $ref: '#/components/schemas/NameAndCodeDto'
        lga:
          $ref: '#/components/schemas/NameAndCodeDto'
        fullAddress:
          type: string
    NameAndCodeDto:
      type: object
      properties:
        name:
          type: string
        code:
          type: string
    UserPojo:
      type: object
      properties:
        title:
          $ref: '#/components/schemas/NameAndCodeDto'
        displayName:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        mobileNumber:
          type: string
        username:
          type: string
        userId:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateCreated:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        accountCode:
          type: string
        createdBy:
          type: string
        lastUpdatedBy:
          type: string
        displayPictureId:
          type: integer
          format: int64
        requiresPasswordUpdate:
          type: boolean
        authToken:
          type: string
        isStudent:
          type: boolean
        id:
          type: integer
          format: int64
        dateOfBirth:
          type: string
          format: date-time
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        isInstructor:
          type: boolean
        setupComplete:
          type: boolean
        ownsDentalOffice:
          type: boolean
        worksInAcademia:
          type: boolean
        emailVerified:
          type: boolean
        accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountMembershipPojo'
        numberOfInvitationsSent:
          type: integer
          format: int64
        languages:
          type: array
          items:
            $ref: '#/components/schemas/NameAndCodeDto'
        address:
          $ref: '#/components/schemas/AddressPojo'
    UploadFileResponse:
      type: object
      properties:
        fileName:
          type: string
        fileDownloadUri:
          type: string
        contentType:
          type: string
        fileId:
          type: integer
          format: int64
        size:
          type: integer
          format: int64
    LoginDto:
      required:
        - password
        - username
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    ApiResponseAppUserProfilePojo:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/AppUserProfilePojo'
    AppUser:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        portalUser:
          $ref: '#/components/schemas/PortalUser'
    AppUserAgent:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        role:
          type: string
        agent:
          $ref: '#/components/schemas/Agent'
        appUser:
          $ref: '#/components/schemas/AppUser'
        organization:
          $ref: '#/components/schemas/Organization'
    AppUserProfilePojo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/AppUserAgent'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createdAt:
          type: string
          format: date-time
        workspaces:
          type: array
          items:
            $ref: '#/components/schemas/Workspace'
        accessToken:
          type: string
    Workspace:
      type: object
      properties:
        organizationName:
          type: string
        organizationId:
          type: integer
          format: int64
        accountCode:
          type: string
        bannerId:
          type: integer
          format: int64
        roles:
          uniqueItems: true
          type: array
          items:
            type: string
    BillGenerationDto:
      required:
        - agentCode
        - organizationId
        - ticketBatchDtos
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        agentCode:
          type: string
        ticketBatchDtos:
          type: array
          items:
            $ref: '#/components/schemas/TicketBatchDto'
    TicketBatchDto:
      required:
        - name
        - numberOfTicketsInBatch
        - ticketTypeId
        - unitPrice
      type: object
      properties:
        ticketTypeId:
          type: integer
          format: int64
        numberOfTicketsInBatch:
          type: integer
          format: int64
        name:
          type: string
        unitPrice:
          type: number
    GenerateBillPojo:
      type: object
      properties:
        billNumber:
          type: string
    NewAppUserDto:
      required:
        - firstName
        - lastName
        - phoneNumber
        - roles
        - username
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        username:
          type: string
        userId:
          type: string
        roles:
          maxItems: 2147483647
          minItems: 1
          type: array
          items:
            $ref: '#/components/schemas/NewAppUserRole'
    NewAppUserRole:
      required:
        - agentId
        - organizationId
        - role
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
        organizationName:
          type: string
        agentId:
          type: integer
          format: int64
        agentName:
          type: string
        role:
          type: string
          enum:
            - SELLER
            - ENFORCER
    AppUserPojo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        roles:
          type: array
          items:
            $ref: '#/components/schemas/AppUserAgent'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        createdAt:
          type: string
          format: date-time
    NewTicketVendDto:
      required:
        - batchNumber
        - recipientName
        - recipientPhoneNumber
        - recipientVehicleNumber
      type: object
      properties:
        batchNumber:
          type: string
        recipientName:
          type: string
        recipientPhoneNumber:
          type: string
        recipientVehicleNumber:
          type: string
    ApiResponseAppUserAvailableBatchesPojo:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/AppUserAvailableBatchesPojo'
    AppUserAvailableBatchesPojo:
      type: object
      properties:
        unsoldBatches:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
        lastIssuedTicket:
          $ref: '#/components/schemas/TicketIssuance'
    Batch:
      type: object
      properties:
        ticketType:
          $ref: '#/components/schemas/TicketType'
        batchNumber:
          type: string
        unitAmount:
          type: number
        productionDate:
          type: string
          format: date-time
        batchSoldOut:
          type: boolean
        numberOfTicketsInBatch:
          type: integer
          format: int32
    Ticket:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        ticketNumber:
          type: string
        amount:
          type: number
        ticketBatch:
          $ref: '#/components/schemas/TicketBatch'
        ticketType:
          $ref: '#/components/schemas/TicketType'
    TicketIssuance:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        recipientName:
          type: string
        recipientPhoneNumber:
          type: string
        vehicleNumber:
          type: string
        ticket:
          $ref: '#/components/schemas/Ticket'
        appUser:
          $ref: '#/components/schemas/AppUser'
        zone:
          $ref: '#/components/schemas/Zone'
    Zone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
        organization:
          $ref: '#/components/schemas/Organization'
    NewTicketValidationDto:
      required:
        - organizationId
        - validationType
      type: object
      properties:
        vehicleNumber:
          type: string
        ticketNumber:
          type: string
        phoneNumber:
          type: string
        ticketTypeCode:
          type: string
        organizationId:
          type: integer
          format: int64
        validationType:
          type: string
          enum:
            - TICKET_NUMBER
            - VEHICLE_NUMBER
            - PHONE_NUMBER
    TicketIssuancePojo:
      type: object
      properties:
        recipientName:
          type: string
        recipientPhoneNumber:
          type: string
        vehicleNumber:
          type: string
        ticket:
          $ref: '#/components/schemas/Ticket'
        ticketType:
          $ref: '#/components/schemas/TicketType'
        appUser:
          $ref: '#/components/schemas/AppUser'
        zone:
          $ref: '#/components/schemas/Zone'
        createdAt:
          type: string
          format: date-time
    AgentRegistrationDto:
      required:
        - ticketTypes
        - zoneCode
      type: object
      properties:
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        mobileNumber:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        username:
          type: string
        password:
          type: string
        state:
          type: string
        lga:
          type: string
        locality:
          type: string
        accountType:
          type: string
        otpPin:
          type: string
        ticketTypes:
          type: array
          items:
            $ref: '#/components/schemas/TicketTypeDto'
        zoneCode:
          type: string
        organizationId:
          type: integer
          format: int64
    TicketTypeDto:
      required:
        - buyingPricePerUnit
        - ticketId
      type: object
      properties:
        buyingPricePerUnit:
          type: number
        ticketId:
          type: integer
          format: int64
        defaultBuyingPricePerUnit:
          type: number
        name:
          type: string
        defaultSellingPricePerUnit:
          type: number
    AgentPojo:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        portalUser:
          $ref: '#/components/schemas/PortalUserPojo'
        zone:
          $ref: '#/components/schemas/Zone'
        agentId:
          type: string
        id:
          type: integer
          format: int64
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationWithMembershipStatus'
    MembershipPojo:
      type: object
      properties:
        accountName:
          type: string
        accountCode:
          type: string
        roles:
          type: array
          items:
            type: string
    OrganizationWithMembershipStatus:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationType:
          type: string
          enum:
            - LOCAL_GOVERNMENT
            - FEDERAL_GOVERNMENT
            - STATE_GOVERNMENT
            - OTHER
        adminName:
          type: string
        adminEmail:
          type: string
        adminPhoneNumber:
          type: string
        location:
          type: string
        bannerId:
          type: integer
          format: int64
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        createdAt:
          type: string
          format: date-time
        membershipStatus:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        zone:
          $ref: '#/components/schemas/Zone'
    PortalUserPojo:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        otherNames:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        displayName:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        preferredName:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        id:
          type: integer
          format: int64
        memberships:
          type: array
          items:
            $ref: '#/components/schemas/MembershipPojo'
        createdAt:
          type: string
          format: date-time
    EditUserDto:
      required:
        - email
        - firstName
        - lastName
        - roles
        - username
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
          enum:
            - MALE
            - FEMALE
            - UNSPECIFIED
            - OTHER
        roles:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
        phoneNumber:
          type: string
    EditAppUserDto:
      required:
        - roles
      type: object
      properties:
        roles:
          type: array
          items:
            $ref: '#/components/schemas/NewAppUserRole'
    EditAgentDto:
      required:
        - organizationId
        - ticketTypes
        - zoneCode
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        ticketTypes:
          type: array
          items:
            $ref: '#/components/schemas/TicketTypeDto'
        zoneCode:
          type: string
        organizationId:
          type: integer
          format: int64
    ReactivateAgentDto:
      required:
        - organizationId
      type: object
      properties:
        organizationId:
          type: integer
          format: int64
    QueryResultsZone:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        empty:
          type: boolean
    QueryResultsPortalUserPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortalUserPojo'
        empty:
          type: boolean
    QueryResultsTicketValidationLogPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketValidationLogPojo'
        empty:
          type: boolean
    TicketValidationLogPojo:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        ticketNumber:
          type: string
        validationResult:
          type: string
          enum:
            - VALID
            - INVALID
        trackingId:
          type: string
        vehicleNumber:
          type: string
        phoneNumber:
          type: string
        gpsCoordinate:
          $ref: '#/components/schemas/GpsCoordinate'
        appUser:
          $ref: '#/components/schemas/AppUser'
        ticketType:
          $ref: '#/components/schemas/TicketType'
        organization:
          $ref: '#/components/schemas/Organization'
        ticketIssuance:
          $ref: '#/components/schemas/TicketIssuance'
        ticket:
          $ref: '#/components/schemas/Ticket'
    QueryResultsTicketSalesPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketSalesPojo'
        empty:
          type: boolean
    TicketSalesPojo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        dateOfSales:
          type: string
          format: date-time
        agentName:
          type: string
        ticketType:
          type: string
        zone:
          type: string
        batchNumber:
          type: string
        amount:
          type: number
        paymentReference:
          type: string
        assignedTo:
          type: string
    QueryResultsTicketIssuancePojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketIssuancePojo'
        empty:
          type: boolean
    QueryResultPojoTicketIssuanceLogPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketIssuanceLogPojo'
        meta:
          type: object
          additionalProperties:
            type: object
        totalAmount:
          type: number
    TicketIssuanceLogPojo:
      type: object
      properties:
        ticketNumber:
          type: string
        ticketType:
          type: string
        appUserName:
          type: string
        agentName:
          type: string
        zoneName:
          type: string
        ticketValue:
          type: number
        dateSold:
          type: string
          format: date-time
        buyerName:
          type: string
        buyerPhone:
          type: string
        vehicleNumber:
          type: string
        organizationName:
          type: string
    QueryResultPojoTicketBatchPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketBatchPojo'
        meta:
          type: object
          additionalProperties:
            type: object
        totalAmount:
          type: number
    TicketBatchPojo:
      type: object
      properties:
        batchNumber:
          type: string
        id:
          type: integer
          format: int64
        soldCount:
          type: integer
          format: int64
        numberOfTicketsInBatch:
          type: integer
          format: int32
        ticketType:
          $ref: '#/components/schemas/TicketType'
        batchSoldOut:
          type: boolean
        productionDate:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        soldTo:
          type: string
        organizationName:
          type: string
    QueryResultsTicketBatchPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketBatchPojo'
        empty:
          type: boolean
    QueryResultsTarrifManagementPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TarrifManagementPojo'
        empty:
          type: boolean
    TarrifManagementPojo:
      type: object
      properties:
        buyingPrice:
          type: number
        sellingPrice:
          type: number
        organizationName:
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        ticketTypeId:
          type: integer
          format: int64
    ApiResponseBasicUserDetails:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/BasicUserDetails'
    BasicUserDetails:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        userId:
          type: string
        email:
          type: string
        username:
          type: string
    QueryResultsPortalAccount:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/PortalAccount'
        empty:
          type: boolean
    OrganizationSummaryWithTariffPojo:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        organizationType:
          type: string
          enum:
            - LOCAL_GOVERNMENT
            - FEDERAL_GOVERNMENT
            - STATE_GOVERNMENT
            - OTHER
        adminName:
          type: string
        adminEmail:
          type: string
        adminPhoneNumber:
          type: string
        location:
          type: string
        bannerId:
          type: integer
          format: int64
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        createdAt:
          type: string
          format: date-time
        tariffs:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
        zones:
          type: array
          items:
            $ref: '#/components/schemas/Zone'
        revenueItem:
          $ref: '#/components/schemas/RevenueItem'
    Nationality:
      type: object
      properties:
        id:
          type: integer
          format: int64
        createdAt:
          type: string
          format: date-time
        lastUpdatedAt:
          type: string
          format: date-time
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        lastUpdatedBy:
          $ref: '#/components/schemas/PortalUser'
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        dateDeactivated:
          type: string
          format: date-time
        deactivatedBy:
          $ref: '#/components/schemas/PortalUser'
        name:
          type: string
        code:
          type: string
    QueryResultsNationality:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Nationality'
        empty:
          type: boolean
    QueryResultsState:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/State'
        empty:
          type: boolean
    QueryResultsLga:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lga'
        empty:
          type: boolean
    QueryResultsCountry:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Country'
        empty:
          type: boolean
    QueryResultsArea:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Area'
        empty:
          type: boolean
    QueryResultsTicketType:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketType'
        empty:
          type: boolean
    QueryResultsAgent:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/Agent'
        empty:
          type: boolean
    QueryResultsTicketTypeDto:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/TicketTypeDto'
        empty:
          type: boolean
    BillPojo:
      type: object
      properties:
        createdAt:
          type: string
          format: date-time
        amount:
          type: number
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        customerEmail:
          type: string
        customerName:
          type: string
        customerPhoneNumber:
          type: string
        datePaid:
          type: string
          format: date-time
        invoiceNumber:
          type: string
        paymentStatus:
          type: string
          enum:
            - PAID
            - PENDING
            - PARTIAL
        createdBy:
          $ref: '#/components/schemas/PortalUser'
        approvalStatus:
          type: string
          enum:
            - APPROVED
            - PENDING
            - DISAPPROVED
        billType:
          type: string
          enum:
            - TICKET_BATCH
        qrcode:
          $ref: '#/components/schemas/BwFile'
        customerAddress:
          type: string
        description:
          type: string
        dueDate:
          type: string
          format: date-time
        reasonForDisapproval:
          type: string
        paymentInvoice:
          $ref: '#/components/schemas/PaymentInvoice'
        billItems:
          type: array
          items:
            $ref: '#/components/schemas/BillItem'
        serviceRequestType:
          type: string
        billerName:
          type: string
        billerPhoneNumber:
          type: string
        billerEmail:
          type: string
        amountPaid:
          type: number
    QueryResultsBillPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/BillPojo'
        empty:
          type: boolean
    QueryResultsAppUserPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/AppUserPojo'
        empty:
          type: boolean
    ChartData:
      type: object
      properties:
        ticketsVended:
          type: array
          items:
            type: integer
            format: int64
        validations:
          type: array
          items:
            type: integer
            format: int64
    DashboardPojo:
      type: object
      properties:
        appUsers:
          type: integer
          format: int64
        activeAgents:
          type: integer
          format: int64
        disbursedTickets:
          type: integer
          format: int64
        topEnforcers:
          type: array
          items:
            $ref: '#/components/schemas/TopEnforcerPerformancePojo'
        label:
          type: array
          items:
            type: string
        chartData:
          $ref: '#/components/schemas/ChartData'
        pendingScheme:
          type: integer
          format: int64
    TopEnforcerPerformancePojo:
      type: object
      properties:
        displayName:
          type: string
        email:
          type: string
        count:
          type: integer
          format: int64
    LandingPageStatisticsPojo:
      type: object
      properties:
        numberOfRegisteredTicketVendors:
          type: integer
          format: int64
        numberOfTicketsSold:
          type: integer
          format: int64
        ticketTypesSupported:
          type: integer
          format: int64
    AppUserStatisticsPojo:
      type: object
      properties:
        numberOfTicketsValidatedInPeriod:
          type: integer
          format: int64
        numberOfTicketsSoldInPeriod:
          type: integer
          format: int64
    DashboardStatisticsPojo:
      type: object
      properties:
        totalVehiclesByTicketType:
          type: array
          items:
            $ref: '#/components/schemas/NameAndValueDtoLong'
        top5Enforcers:
          type: array
          items:
            $ref: '#/components/schemas/NameAndValueDtoLong'
        vendingCountInPeriod:
          type: object
          additionalProperties:
            type: integer
            format: int64
        validationCountInPeriod:
          type: object
          additionalProperties:
            type: integer
            format: int64
        totalAmountOfTicketSoldToAgents:
          type: number
        totalNumberOfTicketsSoldToRiders:
          type: integer
          format: int64
        totalAmountOfTicketsSoldToRiders:
          type: number
        overallAmountOfTicketSoldToAgents:
          type: number
        organizationsPendingApproval:
          type: integer
          format: int64
    NameAndValueDtoLong:
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
          format: int64
    QueryResultsAgentPojo:
      type: object
      properties:
        limit:
          type: integer
          format: int64
        offset:
          type: integer
          format: int64
        total:
          type: integer
          format: int64
        results:
          type: array
          items:
            $ref: '#/components/schemas/AgentPojo'
        empty:
          type: boolean
    ApiResponsePortalUser:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        code:
          type: integer
          format: int32
        data:
          $ref: '#/components/schemas/PortalUser'
  securitySchemes:
    ApiKey:
      type: apiKey
      name: Authorization
      in: header
